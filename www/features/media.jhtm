${{title}}       = "Media Features | JamsEDU";
${{author}}      = "Caboodle Tech";
${{keywords}}    = "Demo, JamsEDU, Media, Images, Embedded, Video, Audio";
${{description}} = "A demo of the media features available in JamsEDU; Images, Embedded, Video, Audio";
${{navigation}}  = "main";

{{T:HEAD}}
<body>
    {{T:HEADER}}
    <section id="main-content" class="go-back">
        <h1>Media Elements</h1>
        <p>
            JamsEDU supports various types of media elements by default. Adding images, audio, and video to a page is normally a complex process requiring lots of HTML code. We have made this process simple by automatically generating the HTML for you. For these features to work you must use JamsEDU's formatting for media elements. If you are familiar with HTML you will notice this is not the typical HTML code you would expect to use.
        </p>
        <h2 id="demo-images">Images</h2>
        <p>
            <img src="assets/artistic-logo.jpg" alt="Caboodle Tech Artistic Logo" class="right" data-caption="Caboodle Tech Logo: Watercolor and Pen in a Decoupage faux Vitreography style">
            You can also easily include images on any page with JamsEDU. We use JavaScript to automatically generate the HTML for this to work since the HTML can be rather complex to create manually. Simply add the class of <code>left</code>, <code>right</code>, or <code>center</code> to an <code>img</code> tag and we will handle image alignment for you. If you do not provide a class <code>center</code> will be used automatically. If you would like to add a figure caption to the image you can do so by adding the <code>data-caption</code> attribute. Below is an example of a centered image using the figure caption. Please note all images should be included relatively if they are hosted by the your website. Absolute URLs should only be used for images hosted outside your website.
        </p>
<pre class="lang-html"><code>&lt;img src="assets/artistic-logo.jpg" alt="Caboodle Tech Artistic Logo" class="right" data-caption="Caboodle Tech Logo: Watercolor and Pen in a Decoupage faux Vitreography style"&gt;
</code></pre>
        <h2 id="demo-audio">PDF</h2>
        <div data-pdf="assets/jamsedu-demo.pdf"></div>
        <h2 id="demo-audio">Audio</h2>
        <p>
            Adding audio to a page is as simple as linking to the audio file and adding the <code>data-audio</code> attribute to the link. Below is an example that is using additional audio features:
        </p>
        <a href="assets/pearl-harbor-address.mp3" data-audio="ogg" data-transcript="assets/pearl-harbor-address.txt">President Roosevelt’s Pearl Harbor Address</a>
<pre class="lang-html"><code>&lt;a href="assets/pearl-harbor-address.mp3" data-audio="ogg" data-transcript="assets/pearl-harbor-address.txt"&gt;
    President Roosevelt’s Pearl Harbor Address
&lt;/a&gt;
</code></pre>
        <p>
            Here are all the attributes you can add to an audio tag. Pay careful attention to the required formatting:
        </p>
        <dl>
            <dt>
                data-audio
            </dt>
            <dd>
                A comma separated list of alternate formats this audio is available in; ogg, wav, and so on. This audio file must actually exist at the same location as the original <code>href</code>.
            </dd>
            <dt>
                data-transcript
            </dt>
            <dd>
                The URL &ndash; relative (most likely) or absolute &ndash; to a transcript of this audio.
            </dd>
            <dt>
                data-artist
            </dt>
            <dd>
                The name of the artist by itself or the name of the artist and a link to the artist/ original source of this audio, in the format of <code>artist:url</code>
            </dd>
            <dt>
                data-author
            </dt>
            <dd>
                This is used exactly the same as <code>data-artist</code> and will overwrite the <code>data-artist</code> tag; included for semantics.
            </dd>
        </dl>
        <h2 id="demo-video">Video</h2>
        <p>
            Including videos in your pages is as simple as linking to the video and adding the <code>data-video</code> attribute to the link. We use JavaScript to automatically generate the HTML for this to work since the HTML can be rather complex. Here is an example of adding a YouTube video:
        </p>
        <a href="https://youtu.be/NpEaa2P7qZI" target="_blank" data-video>Video Placeholder</a>
<pre class="lang-html">
<code class="lang-html">&lt;a href="https://youtu.be/NpEaa2P7qZI" data-video&gt;
    Title of the video / video information.
&lt;/a&gt;
</code></pre>
        <p>
            Using external video hosting providers offers you many benefits, but if you would like to host the video yourself that is also possible. Here is a video being hosted directly by this site. You will notice that there are a few more options to indicate in the link. 
        </p>
        <a href="assets/intro.mp4" target="_blank" data-video="ogg" data-captions="English:assets/captions.en.vtt" data-subtitles="" data-poster="assets/poster.png" data-self-hosted>Self-hosted Video</a>
<pre class="lang-html">
<code class="lang-html">&lt;a href="assets/intro.mp4" data-video="ogg" data-captions="English:assets/captions.en.vtt" data-subtitles="" data-poster="assets/poster.png" data-self-hosted&gt;
    Title of the video / video information.
&lt;/a&gt;
</code></pre>
        <p>
            Here are all the attributes you can add to a self hosted video. Pay careful attention to the required formatting:
        </p>
        <dl>
            <dt>
                data-video
            </dt>
            <dd>
                A comma separated list of alternate formats this video is available in; ogg, webm, and so on. This video file must actually exist at the same location as the original <code>href</code>.
            </dd>
            <dt>
                data-captions
            </dt>
            <dd>
                A comma separated list of closed captioning files for this video. Use the format <code>Language:path/filename.lang.extension</code> where <code>lang</code> is the <a href="https://www.w3schools.com/tags/ref_language_codes.asp" target="_blank" rel="noreferrer noopener">ISO language code</a> and <code>extension</code> is the file extension, most likely <a href="https://en.wikipedia.org/wiki/WebVTT" target="_blank" rel="noreferrer noopener">.vtt</a>.
            </dd>
            <dt>
                data-subtitles
            </dt>
            <dd>
                A comma separated list of subtitle files for this video. Use the format <code>Language:path/filename.lang.extension</code> where <code>lang</code> is the <a href="https://www.w3schools.com/tags/ref_language_codes.asp" target="_blank" rel="noreferrer noopener">ISO language code</a> and <code>extension</code> is the file extension, most likely <a href="https://en.wikipedia.org/wiki/WebVTT" target="_blank" rel="noreferrer noopener">.vtt</a>.
            </dd>
            <dt>
                data-poster
            </dt>
            <dd>
                A URL &ndash; relative (most likely) or absolute &ndash; to the image to use as the video thumbnail (placeholder) before the user plays the video.
            </dd>
            <dt>
                data-self-hosted
            </dt>
            <dd>
                Add this tag to the end of the link to assist JamsEDU in detecting this video should be considered self hosted.
            </dd>
        </dl>
        <div class="callout warning">
            <h2>Performance Warning:</h2>
            <p>
                Video links should be treated like a <code>div</code> tag and not placed inside paragraph (<code>p</code>) tags. JamsEDU will automatically move your video to the correct spot in the page so it loads with valid HTML, but this will add to the pages loading time if you have several videos on a single page.
            </p>
        </div>
    </section>
    {{T:FOOTER}}
</body>
</html>